[{"C:\\Users\\drorc\\Desktop\\exercise_fe\\exercise\\src\\index.js":"1","C:\\Users\\drorc\\Desktop\\exercise_fe\\exercise\\src\\reportWebVitals.js":"2","C:\\Users\\drorc\\Desktop\\exercise_fe\\exercise\\src\\App.js":"3","C:\\Users\\drorc\\Desktop\\exercise_fe\\exercise\\src\\components\\TodoList\\TodoList.js":"4","C:\\Users\\drorc\\Desktop\\exercise_fe\\exercise\\src\\components\\Task\\Task.js":"5","C:\\Users\\drorc\\Desktop\\exercise_fe\\exercise\\src\\global.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":309,"mtime":1616160276257,"results":"10","hashOfConfig":"8"},{"size":2232,"mtime":1616267193401,"results":"11","hashOfConfig":"8"},{"size":1531,"mtime":1616265942363,"results":"12","hashOfConfig":"8"},{"size":108,"mtime":1616156972752,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"rk52rl",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\drorc\\Desktop\\exercise_fe\\exercise\\src\\index.js",[],["28","29"],"C:\\Users\\drorc\\Desktop\\exercise_fe\\exercise\\src\\reportWebVitals.js",[],"C:\\Users\\drorc\\Desktop\\exercise_fe\\exercise\\src\\App.js",[],"C:\\Users\\drorc\\Desktop\\exercise_fe\\exercise\\src\\components\\TodoList\\TodoList.js",["30"],"import {Container,Form , Button} from 'react-bootstrap'\r\nimport React from 'react'\r\nimport Task from './../Task/Task'\r\nimport axios from 'axios';\r\nimport {connection_data} from '../../global'\r\n\r\nclass TodoList extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            tasks:[],\r\n            newTask:\"\"\r\n        }\r\n        this.addTask = this.addTask.bind(this)\r\n        this.handleTaskChange = this.handleTaskChange.bind(this)\r\n        this.markTask = this.markTask.bind(this)\r\n        this.removeTask = this.removeTask.bind(this)\r\n    }\r\n\r\n    getTasks() {\r\n        axios.get(connection_data.backend_host + \":\" + connection_data.backend_port + \"/tasks\")\r\n      .then(res => {\r\n        this.setState({ tasks: res.data });\r\n      })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getTasks()\r\n    }\r\n\r\n    async addTask() {\r\n      if (this.state.newTask != \"\") {\r\n        await axios.post(connection_data.backend_host + \":\" + connection_data.backend_port +'/newTask', {\r\n          task: this.state.newTask\r\n        }).then(this.getTasks());\r\n      }\r\n    }\r\n\r\n    async removeTask(id) {\r\n      await axios.delete(connection_data.backend_host + \":\" + connection_data.backend_port +'/deleteTask',{ data: { id: id }\r\n      }).then(this.getTasks())\r\n    }\r\n    \r\n    handleTaskChange(e){\r\n      this.setState({newTask: e.target.value});\r\n   }\r\n\r\n   async markTask(id,isdone) {\r\n    await axios.put(connection_data.backend_host + \":\" + connection_data.backend_port +'/markDone', {\r\n      id: id,\r\n      isdone:isdone\r\n    }).then(this.getTasks())\r\n    }\r\n    render() {\r\n      return (\r\n      <Container>\r\n        <h1>TODO LIST</h1> \r\n        <Form>\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Control type=\"text\" placeholder=\"Enter new task\" value={this.state.newTask} onChange={this.handleTaskChange}/>\r\n          </Form.Group>\r\n          <Button variant=\"primary\" type=\"submit\" onClick={this.addTask}>\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n          {this.state.tasks.map(task => <Task markTask={this.markTask} removeTask={this.removeTask} dataFromParent={task}></Task>)}\r\n      </Container>\r\n        );\r\n    }\r\n  }\r\n  export default TodoList;","C:\\Users\\drorc\\Desktop\\exercise_fe\\exercise\\src\\components\\Task\\Task.js",[],"C:\\Users\\drorc\\Desktop\\exercise_fe\\exercise\\src\\global.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":32,"column":30,"nodeType":"37","messageId":"38","endLine":32,"endColumn":32},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]