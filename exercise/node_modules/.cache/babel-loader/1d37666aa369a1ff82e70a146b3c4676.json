{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\drorc\\\\Desktop\\\\exercise_fe\\\\exercise\\\\src\\\\components\\\\TodoList\\\\TodoList.js\";\nimport { Container, Form, Button } from 'react-bootstrap';\nimport React from 'react';\nimport Task from './../Task/Task';\nimport axios from 'axios';\nimport { connection_data } from '../../global';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TodoList extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      tasks: [],\n      newTask: \"\"\n    };\n    this.addTask = this.addTask.bind(this);\n    this.handleTaskChange = this.handleTaskChange.bind(this);\n    this.markTask = this.markTask.bind(this);\n    this.removeTask = this.removeTask.bind(this);\n  }\n\n  getTasks() {\n    axios.get(connection_data.backend_host + \":\" + connection_data.backend_port + \"/tasks\").then(res => {\n      this.setState({\n        tasks: res.data\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.getTasks();\n    setInterval(this.getTasks(), 1000);\n  }\n\n  async addTask() {\n    if (this.state.newTask != \"\") {\n      await axios.post(connection_data.backend_host + \":\" + connection_data.backend_port + '/newTask', {\n        task: this.state.newTask\n      }).then(this.getTasks());\n    }\n  }\n\n  async removeTask(id) {\n    await axios.delete(connection_data.backend_host + \":\" + connection_data.backend_port + '/deleteTask', {\n      data: {\n        id: id\n      }\n    }).then(console.log(\"dfdf\"));\n  }\n\n  handleTaskChange(e) {\n    this.setState({\n      newTask: e.target.value\n    });\n  }\n\n  async markTask(id, isdone) {\n    await axios.put(connection_data.backend_host + \":\" + connection_data.backend_port + '/markDone', {\n      id: id,\n      isdone: isdone\n    }).then(this.getTasks());\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"TODO LIST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicEmail\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter new task\",\n            value: this.state.newTask,\n            onChange: this.handleTaskChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          onClick: this.addTask,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), this.state.tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n        markTask: this.markTask,\n        removeTask: this.removeTask,\n        dataFromParent: task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 41\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["C:/Users/drorc/Desktop/exercise_fe/exercise/src/components/TodoList/TodoList.js"],"names":["Container","Form","Button","React","Task","axios","connection_data","TodoList","Component","constructor","state","tasks","newTask","addTask","bind","handleTaskChange","markTask","removeTask","getTasks","get","backend_host","backend_port","then","res","setState","data","componentDidMount","setInterval","post","task","id","delete","console","log","e","target","value","isdone","put","render","map"],"mappings":"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","sourcesContent":["import {Container,Form , Button} from 'react-bootstrap'\r\nimport React from 'react'\r\nimport Task from './../Task/Task'\r\nimport axios from 'axios';\r\nimport {connection_data} from '../../global'\r\n\r\nclass TodoList extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            tasks:[],\r\n            newTask:\"\"\r\n        }\r\n        this.addTask = this.addTask.bind(this)\r\n        this.handleTaskChange = this.handleTaskChange.bind(this)\r\n        this.markTask = this.markTask.bind(this)\r\n        this.removeTask = this.removeTask.bind(this)\r\n    }\r\n\r\n    getTasks() {\r\n        axios.get(connection_data.backend_host + \":\" + connection_data.backend_port + \"/tasks\")\r\n      .then(res => {\r\n        this.setState({ tasks: res.data });\r\n      })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getTasks()\r\n        setInterval(this.getTasks(),1000)\r\n    }\r\n\r\n    async addTask() {\r\n      if (this.state.newTask != \"\") {\r\n        await axios.post(connection_data.backend_host + \":\" + connection_data.backend_port +'/newTask', {\r\n          task: this.state.newTask\r\n        }).then(this.getTasks());\r\n      }\r\n    }\r\n\r\n    async removeTask(id) {\r\n      await axios.delete(connection_data.backend_host + \":\" + connection_data.backend_port +'/deleteTask',{ data: { id: id }\r\n      }).then(console.log(\"dfdf\"))\r\n    }\r\n    \r\n    handleTaskChange(e){\r\n      this.setState({newTask: e.target.value});\r\n   }\r\n\r\n   async markTask(id,isdone) {\r\n    await axios.put(connection_data.backend_host + \":\" + connection_data.backend_port +'/markDone', {\r\n      id: id,\r\n      isdone:isdone\r\n    }).then(this.getTasks())\r\n    }\r\n    render() {\r\n      return (\r\n      <Container>\r\n        <h1>TODO LIST</h1> \r\n        <Form>\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Control type=\"text\" placeholder=\"Enter new task\" value={this.state.newTask} onChange={this.handleTaskChange}/>\r\n          </Form.Group>\r\n          <Button variant=\"primary\" type=\"submit\" onClick={this.addTask}>\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n          {this.state.tasks.map(task => <Task markTask={this.markTask} removeTask={this.removeTask} dataFromParent={task}></Task>)}\r\n      </Container>\r\n        );\r\n    }\r\n  }\r\n  export default TodoList;"]},"metadata":{},"sourceType":"module"}